<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyrk.dao.BankAccountDao">
    <insert id="addBankAccount" parameterType="BankAccount">
    insert  into bank_informationsheet (bankName,bankaccount,bankrownum,bankName2
,bankaccount2,bankrownum2,breakId)
values(#{bankName},#{bankaccount},#{bankrownum},#{bankName2}
,#{bankaccount2},#{bankrownum2},#{breakId})
    </insert>

    <select id="BankAccountCount" resultType="int" parameterType="com.lyrk.entity.BankAccountParameter">
       SELECT count(bankId) from bank_informationsheet
        <trim>
            <where>
                1=1
                <if test="startTime!=null and startTime!='' and outTime!='' and
  outTime!=null">
                    and   startTime &gt;= #{startTime}
                    and startTime &lt;= #{outTime}
                </if>
                <if test="bankName!=null and bankName!=''">
                    and bankName like concat ('%',#{bankName},'%')
                </if>
            </where>
        </trim>
    </select>
    <!--分页查询-->
    <select id="queryBankAccountList" resultType="BankAccount" parameterType="com.lyrk.entity.BankAccountParameter">
        SELECT * from bank_informationsheet
        <trim>
            <where>
                1=1
                <if test="startTime!=null and startTime!='' and outTime!='' and
  outTime!=null">
                    and   startTime &gt;= #{startTime}
                    and startTime &lt;= #{outTime}
                </if>
                <if test="bankName!=null and bankName!=''">
                    and bankName like concat ('%',#{bankName},'%')
                </if>
            </where>
        </trim>
        order By
        <if test="orderBy!=null and orderBy!=''">
            ${orderBy}
        </if>

        <if test="orderBy!=null or orderBy!=''">
            ${orderType}
        </if>
        limit #{PageIndex},#{PageSize}
    </select>

    <select id="toUpdateBankAccountOut" parameterType="BankAccount" resultType="BankAccount" >
        select * from bank_informationsheet where bankId=#{bankId}
    </select>

    <update id="updateBankAccountOut" parameterType="BankAccount">
        update bank_informationsheet set
       bankName= #{bankName},bankaccount=#{bankaccount},
       bankrownum=#{bankrownum},
       bankName2=#{bankName2},bankaccount2=#{bankaccount2},
       bankrownum2=#{bankrownum2},breakId=#{breakId},outTime=now()
          where bankId=#{bankId}
    </update>

    <delete id="deleteBankAccount" parameterType="BankAccount">
        delete from bank_informationsheet where bankId=#{bankId}
    </delete>

</mapper>